@{
    ViewData["Title"] = "Students";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="mb-4">
    <h3>Students</h3>
    <button type="button" id="btnAdd" class="k-button k-button-lg k-button-solid-info"
        onclick="openAddForm()">âœš</button>
</div>

<!-- Kendo Grid for Student Data -->
<div id="studentGrid"></div>

<!-- Kendo Notification -->
<span id="notification"></span>

<!-- Kendo Window Modal -->
<div id="myKModal">
    <form id="studentForm"></form>
</div>

@section Scripts {
    <script>
        const baseUrl = "http://localhost:5190/api/student";

        $(document).ready(function () {
            initializeKendoComponents();
        });

        // Initialize Kendo Components
        function initializeKendoComponents() {
            loadWindowAndNotification();
            loadStudentGrid();
        }

        // Load Kendo Window & Notification
        function loadWindowAndNotification() {
            $("#myKModal").kendoWindow({
                width: "600px",
                title: "Student Form",
                visible: false,
                modal: true,
                actions: ["Close"]
            });

            $("#notification").kendoNotification({
                allowHideAfter: 1000,
                width: 300,
                position: { pinned: true, top: 30, right: 30 }
            });
        }

        // Load Kendo Grid
        function loadStudentGrid() {
            $("#studentGrid").kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: baseUrl,
                            type: "GET",
                            dataType: "json"
                        }
                    },
                    schema: {
                        model: {
                            id: "studentID",
                            fields: {
                                studentID: { type: "number" },
                                standardID: { type: "number" },
                                rollNumber: { type: "string" },
                                guardianName: { type: "string" },
                                guardianContact: { type: "string" },
                                section: { type: "string" },
                                user: { defaultValue: {} },
                                standard: { defaultValue: {} }
                            }
                        }
                    },
                    pageSize: 10
                },
                height: 400,
                pageable: true,
                sortable: true,
                filterable: true,
                columns: [
                    { field: "studentID", title: "ID", width: "40px" },
                    { field: "user.firstName", title: "First Name", template: "#= user.firstName || '' #", width: "100px" },
                    { field: "user.lastName", title: "Last Name", template: "#= user.lastName || '' #", width: "100px" },
                    { field: "user.birthDate", title: "Birth Date", template: "#= user.birthDate || '' #", width: "100px" },
                    { field: "user.gender", title: "Gender", template: "#= user.gender || '' #", width: "80px" },
                    { field: "user.image", title: "Image", template: "<img src='/profile_images/#= user.image ? user.image : 'placeholder.jpg' #' style='width:50px; height:50px;'/>", width: "80px" },
                    { field: "user.email", title: "Email", template: "#= user.email || '' #", width: "120px" },
                    { field: "user.contact", title: "Contact", template: "#= user.contact || '' #", width: "120px" },
                    { field: "user.address", title: "Address", template: "#= user.address || '' #", width: "120px" },
                    { field: "user.pincode", title: "Pin Code", template: "#= user.pincode || '' #", width: "80px" },
                    { field: "standardID", title: "Standard", template: "#= standard ? standard.standardName : '' #", width: "100px" },
                    { field: "rollNumber", title: "Roll No.", width: "80px" },
                    { field: "guardianName", title: "Guardian", width: "150px" },
                    { field: "guardianContact", title: "Guardian Contact", width: "150px" },
                    { field: "section", title: "Section", width: "80px" },
                    {
                        title: "Actions",
                        template: `
                                        <button class='k-button k-button-solid-info' onclick='openEditForm(#=studentID#)'>Edit</button>
                                        <button class='k-button k-button-solid-error' onclick='deleteStudent(#=studentID#)'>Delete</button>
                                    `,
                        width: 160
                    }
                ]
            });
        }

        // Load Kendo Form
        function loadStudentForm(studentData) {
            $("#studentForm").empty(); // Clear previous form fields before adding new ones

            $("#studentForm").kendoForm({
                formData: studentData,
                items: [
                    {
                        field: "studentID",
                        editor: function (container) {
                            $(container).append('<input type="text" name="studentID" readonly/>');
                        },
                        hidden: true
                    },
                    { field: "user.firstName", label: "First Name", validation: { required: true } },
                    { field: "user.lastName", label: "Last Name", validation: { required: true } },
                    { field: "user.birthDate", label: "Birth Date", editor: "DatePicker" },
                    {
                        field: "user.gender",
                        label: "Gender",
                        editor: function (container, options) {
                            var genderValue = options.model.user?.gender || "";
                            var genderHtml = `
                            <label><input type="radio" name="gender" value="Male" ${genderValue === "Male" ? "checked" : ""}/> Male</label>
                            <label><input type="radio" name="gender" value="Female" ${genderValue === "Female" ? "checked" : ""}/> Female</label>
                            <label><input type="radio" name="gender" value="Other" ${genderValue === "Other" ? "checked" : ""}/> Other</label>
                        `;
                            $(genderHtml).appendTo(container);
                        }
                    },
                    {
                        field: "user.image",
                        label: "Image",
                        editor: function (container) {
                            $(container).append('<input type="file" name="ImageFile" accept="image/*"/>');
                        }
                    },
                    { field: "user.email", label: "Email", validation: { required: true, email: true } },
                    { field: "user.contact", label: "Contact", validation: { required: true } },
                    { field: "user.address", label: "Address" },
                    { field: "user.pincode", label: "Pin Code" },
                    { field: "standardID", label: "Standard ID", validation: { required: true } },
                    { field: "rollNumber", label: "Roll Number", validation: { required: true } },
                    { field: "guardianName", label: "Guardian Name" },
                    { field: "guardianContact", label: "Guardian Contact" },
                    { field: "section", label: "Section" }
                ],
                buttonsTemplate: `
                <button type="submit" class="k-button k-button-lg k-button-solid-info">Save</button>
                <button type="button" class="k-button k-button-lg k-button-solid-base" onclick="closeModal()">Cancel</button>
            `,
                submit: function (e) {
                    e.preventDefault();
                    saveStudent(e.model);
                }
            });
        }

        // Open Modal for Adding New Student
        function openAddForm() {
            loadStudentForm({
                studentID: 0,
                standardID: "",
                rollNumber: "",
                guardianName: "",
                guardianContact: "",
                section: ""
            });
            openModal();
        }

        // Open Modal for Editing Existing Student
        function openEditForm(id) {
            $.ajax({
                url: `${baseUrl}/${id}`,
                type: "GET",
                success: function (response) {
                    loadStudentForm(response);
                    openModal();
                },
                error: function () {
                    showNotification("Failed to load student data.", "error");
                }
            });
        }

        // Open Modal
        function openModal() {
            $("#myKModal").data("kendoWindow").center().open();
        }

        // Close Modal
        function closeModal() {
            $("#myKModal").data("kendoWindow").close();
        }

        // Save Student (Create/Update)
        function saveStudent(model) {
            var formData = new FormData();

            // Append scalar fields
            formData.append("studentID", model.studentID || 0);
            formData.append("standardID", model.standardID);
            formData.append("rollNumber", model.rollNumber);
            formData.append("guardianName", model.guardianName);
            formData.append("guardianContact", model.guardianContact);
            formData.append("section", model.section);

            // Append user object fields
            if (model.user) {
                formData.append("user.firstName", model.user.firstName);
                formData.append("user.lastName", model.user.lastName);
                formData.append("user.birthDate", model.user.birthDate);
                formData.append("user.gender", model.user.gender);
                formData.append("user.email", model.user.email);
                formData.append("user.contact", model.user.contact);
                formData.append("user.address", model.user.address);
                formData.append("user.pincode", model.user.pincode);
            }

            // Append image file if selected
            var imageFile = document.querySelector("input[name='ImageFile']").files[0];
            if (imageFile) {
                formData.append("ImageFile", imageFile);
            }

            // Send AJAX request
            $.ajax({
                url: model.studentID ? (baseUrl + "/" + model.studentID) : baseUrl,
                type: model.studentID ? "PUT" : "POST",
                data: formData,
                contentType: false, // Important: Don't set Content-Type for FormData
                processData: false, // Important: Prevent jQuery from processing FormData
                success: function (response) {
                    alert("Student saved successfully!");
                    $("#studentModal").modal("hide");
                    loadStudentGrid(); // Reload grid data
                },
                error: function (error) {
                    alert("Error saving student!");
                    console.log(error);
                }
            });
        }


        // Delete Student
        function deleteStudent(id) {
            if (confirm("Are you sure you want to delete this student?")) {
                $.ajax({
                    url: `${baseUrl}/${id}`,
                    type: "DELETE",
                    success: function (response) {
                        if (response.success) {
                            showNotification("Student deleted successfully!", "success");
                            reloadGrid();
                        } else {
                            showNotification(response.message, "error");
                        }
                    },
                    error: function () {
                        showNotification("An error occurred. Please try again.", "error");
                    }
                });
            }
        }

        // Show Kendo Notification
        function showNotification(message, type) {
            $("#notification").data("kendoNotification").show(message, type);
        }

        // Reload Grid Data
        function reloadGrid() {
            $("#studentGrid").data("kendoGrid").dataSource.read();
        }
    </script>
}
