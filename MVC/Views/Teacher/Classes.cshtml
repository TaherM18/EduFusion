@{
    ViewData["Title"] = "Classes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <script>
        const teacher = GetUserData();
        const teacherID = teacher ? teacher.userID : 57;
        let apiBaseUrl = "http://localhost:5190/api";

        var standardApi = `${apiBaseUrl}/api/standard`;
        var subjectApi = `${apiBaseUrl}/api/standard`;
        var teacherApi = `${apiBaseUrl}/api/Teacher/GetTeacherBySubject`;

        @* // Initialize Kendo Window
        var formWindow = $("#container").kendoWindow({
            title: "Add Class",
            width: "400px",
            height: "450px",
            visible: false,
            modal: true,
            actions: ["Close"]
        }).data("kendoWindow");

        $("#add-class").click(function () {
            formWindow.center().open();
        }); *@

            $("#form-container").kendoForm({
                orientation: "vertical",
                formData: {
                    classID: null,
                    subjectID: null,
                    teacher: "",
                    timeSlot: null
                },
                items: [
                    {
                        field: "standardID",
                        label: "Standard",
                        editor: "DropDownList",
                        editorOptions: {
                            optionLabel: "Select Standard",
                            dataTextField: "standardName",
                            dataValueField: "standardID",
                            dataSource: {
                                transport: { read: standardApi }
                            },
                            change: function (e) {
                                var selectedStandard = this.value();
                                fetchSubject(selectedStandard);
                            }
                        }
                    },
                    {
                        field: "subjectID",
                        label: "Subject",
                        editor: "DropDownList",
                        editorOptions: {
                            optionLabel: "Select Subject",
                            dataTextField: "subjectName",
                            dataValueField: "subjectID",
                            dataSource: [],
                            change: function (e) {
                                var selectedSubject = this.value();
                                fetchTeacher(selectedSubject);
                            }
                        }
                    },
                    {
                        field: "teacher",
                        label: "Teacher",
                        editor: "TextBox",
                        editorOptions: { readonly: true }
                    },
                    {
                        field: "startTime",
                        label: "Start Time",
                        editor: "TimePicker"
                    },
                    {
                        field: "endTime",
                        label: "End Time",
                        editor: "TimePicker"
                    }
                ]
            });

        function fetchSubject(selectedStandard) {
            $.ajax({
                url: subjectApi + "/" + selectedStandard,
                type: "GET",
                success: function (data) {
                    console.log(`fetchSubject(${selectedStandard})\n`, data.subjects);
                    var subjectDropdown = $("#form-container").find("[name=subjectID]").data("kendoDropDownList");
                    subjectDropdown.setDataSource(new kendo.data.DataSource({ data: data.subjects }));
                    subjectDropdown.value(""); // Reset value
                }
            });
        }

        function fetchTeacher(selectedSubject) {
            $.ajax({
                url: teacherApi + "/" + selectedSubject,
                type: "GET",
                success: function (data) {
                    var teacherTextBox = $("#form-container").find("[name=teacher]").data("kendoTextBox");
                    teacherTextBox.value(data.user.firstName);
                }
            })
        }

        // Fetch API Data (Replace with actual API call)
        let apiData = [];

        $.ajax({
            url: `${apiBaseUrl}/timetable/teacher/${teacherID}`,
            type: "GET",
            success: function (data) {
                apiData = data;
                console.log("API Data\n", apiData);
                // Map API Data to Kendo Scheduler Format
                // Get the current year
                const currentYear = new Date().getFullYear();

                // Generate timetable events for all months
                let schedulerData = [];
                for (let month = 0; month < 12; month++) { // Loop through all months (0 = Jan, 11 = Dec)
                    data.forEach(item => {
                        for (let week = 1; week <= 4; week++) { // Repeat for 4 weeks in a month
                            let startDate = new Date(currentYear, month, (week - 1) * 7 + item.dayOfWeek, ...item.startTime.split(":").map(Number));
                            let endDate = new Date(currentYear, month, (week - 1) * 7 + item.dayOfWeek, ...item.endTime.split(":").map(Number));

                            schedulerData.push({
                                id: `${item.timetableID}-${month}-${week}`,
                                title: `${item.subject.subjectName} - ${item.subject.teacher.user.firstName} ${item.subject.teacher.user.lastName}`,
                                start: startDate,
                                end: endDate,
                                location: item.classModel.className
                            });
                        }
                    });
                }

                // Initialize Kendo Scheduler
                $("#scheduler").kendoScheduler({
                    date: new Date(currentYear, 2, 3), // Set start date (March as an example)
                    startTime: new Date(currentYear, 2, 3, 8, 0, 0), // Start time
                    endTime: new Date(currentYear, 2, 3, 18, 0, 0), // End time
                    views: ["month", "agenda"],
                    editable: false, // Disable editing
                    timezone: "Etc/UTC",
                    dataSource: {
                        data: schedulerData,
                        schema: {
                            model: {
                                id: "id",
                                fields: {
                                    id: { type: "number" },
                                    title: { type: "string" },
                                    start: { type: "date" },
                                    end: { type: "date" },
                                    location: { type: "string" }
                                }
                            }
                        }
                    }
                });
            }
        });
    </script>
}

<h1>Classes</h1>

@* <button id="add-class" class="k-button k-button-solid-primary">Add Class</button> *@

@* <div id="container">
    <div id="form-container"></div>
</div> *@

<div id="scheduler"></div>
